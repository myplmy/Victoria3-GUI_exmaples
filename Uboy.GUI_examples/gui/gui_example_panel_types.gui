############################################
# GUI MODDING TUTORIAL - PANEL TYPES
############################################
# This file defines the actual panel that appears in-game
# Fixed version based on Community Mod Framework patterns

@panel_width = 540
@panel_width_half = 270

types gui_example_panel_types {
    type gui_example_panel = default_block_window {
        name = "gui_example_panel"
        visible = "[GetVariableSystem.Exists('gui_example_panel_open')]"

        blockoverride "animation_state_block"{
        }

        blockoverride "window_header_name"{
            raw_text = "gui example panel title"
        }

        blockoverride "header_close_button"{
            onclick = "[GetVariableSystem.Clear('gui_example_panel_open')]"
        }

        widget = {
            state = {
                trigger_when = "[InformationPanelBar.IsAnyPanelOpen]"
                on_finish = "[GetVariableSystem.Clear('gui_example_panel_open')]"
            }
        }

        # Main content area
        blockoverride "scrollarea_content" {
            container = {
                parentanchor = hcenter
                
                # TAB 1 CONTENT
                flowcontainer = {
                    visible = "[And(
                        GetVariableSystem.Exists('gui_example_panel_open'),
                        Not(GetVariableSystem.Exists('gui_tab2_open'))
                        )]"
                    using = default_content_fade
                    using = default_list_position
                    margin_bottom = 15
                    direction = vertical
                    spacing = 10
                    
                    ### TEST 1A ###
                    test_container = {}
                    ### TEST END ###
                }
                
                # TAB 2 CONTENT - 두번째 탭 (비어있음)
                flowcontainer = {
                    visible = "[And(
                        GetVariableSystem.Exists('gui_example_panel_open'),
                        GetVariableSystem.Exists('gui_tab2_open')
                        )]"
                    using = default_content_fade
                    using = default_list_position
                    margin_bottom = 15
                    direction = vertical
                    spacing = 10
                    
                    # 두번째 탭 콘텐츠
                }
            }
        }
        
        blockoverride "fixed_top" {
            tab_buttons = {
                blockoverride "first_button" {
                    text = "Tab 1"
                }
                blockoverride "first_button_tooltip" {
                    tooltip = "Tab 1"
                }
                blockoverride "first_button_click" {
                    onclick = "[GetVariableSystem.Clear('gui_tab2_open')]"
                }
                blockoverride "first_button_visibility" {
                    visible = "[Not(GetVariableSystem.Exists('gui_tab2_open'))]"
                }
                blockoverride "first_button_visibility_checked" {
                    visible = "[GetVariableSystem.Exists('gui_tab2_open')]"
                }
                blockoverride "first_button_selected" {
                    text = "Tab 1"
                }
                
                blockoverride "second_button" {
                    text = "Tab 2"
                }
                blockoverride "second_button_tooltip" {
                    tooltip = "Tab 2"
                }
                blockoverride "second_button_click" {
                    onclick = "[GetVariableSystem.Set('gui_tab2_open','tab2')]"
                }
                blockoverride "second_button_visibility" {
                    visible = "[GetVariableSystem.Exists('gui_tab2_open')]"
                }
                blockoverride "second_button_visibility_checked" {
                    visible = "[Not(GetVariableSystem.Exists('gui_tab2_open'))]"
                }
                blockoverride "second_button_selected" {
                    text = "Tab 2"
                }
            }
        }
    }
}
#    type gui_example_panel = default_block_window {
#        name = "gui_example_panel"
#        
#        # Layer is important - determines draw order
#        layer = layer_ingame_menu
#        
#        # FIXED: Proper animation state block following CMF pattern
#        blockoverride "animation_state_block" {
#            state = {
#                name = _show
#                # Close other panels when this one opens
#                on_finish = "[InformationPanelBar.ClosePanel]"
#                on_finish = "[MapListPanelManager.CloseCurrentPanel]"
#                # Optional: Add opening sound
#                start_sound = {
#                    soundeffect = "event:/SFX/UI/SideBar/politics"
#                }
#            }
#            state = {
#                name = _hide
#                # Optional: Add closing sound
#                start_sound = {
#                    soundeffect = "event:/SFX/UI/SideBar/politics_stop"
#                }
#            }
#        }
#        
#        # Close button functionality
#        blockoverride "header_close_button" {
#            visible = yes
#            onclick = "[InformationPanelBar.ClosePanel]"
#        }
#        
#        # Panel title
#        blockoverride "window_header_name" {
#            raw_text = "GUI Modding Tutorial"
#        }
#        
#        # Main content area
#        blockoverride "scrollarea_content" {
#            flowcontainer = {
#                direction = vertical
#                spacing = 20
#                minimumsize = { @panel_width -1 }
#                
#                # Section 1: Basic Text
#                widget = {
#                    size = { @panel_width 100 }
#                    
#                    background = {
#                        using = default_background
#                    }
#                    
#                    textbox = {
#                        parentanchor = center
#                        raw_text = "Welcome to GUI Modding Tutorial!\n\nThis panel demonstrates basic GUI elements."
#                        align = center
#                        multiline = yes
#                        autoresize = yes
#                        maximumsize = { 480 -1 }
#                    }
#                }
#                
#                # Section 2: Button Example
#                button = {
#                    size = { 200 40 }
#                    using = default_button
#                    parentanchor = hcenter
#                    
#                    onclick = "[InformationPanelBar.ClosePanel]"
#                    
#                    textbox = {
#                        parentanchor = center
#                        raw_text = "Close Panel"
#                        align = center|nobaseline
#                    }
#                }
#                
#                # Section 3: Info Box
#                widget = {
#                    size = { @panel_width 80 }
#                    
#                    background = {
#                        using = entry_bg_simple
#                    }
#                    
#                    textbox = {
#                        parentanchor = center
#                        raw_text = "Panel is working correctly!\nIf you can see this, the fix succeeded."
#                        align = center
#                        multiline = yes
#                        autoresize = yes
#                        maximumsize = { 480 -1 }
#                    }
#                }
#            }
#        }
#    }